https://github.com/brucewangelvin/JavaLessons/tree/master/OOPArrayList Presentation: https://docs.google.com/presentation/d/1QBg2lWHKTG3turimISJnSwcqPhXyVgCpTztIKJiZVCo/edit?usp=sharingFirst ArrayList Problem (Easy): Create a list of five pet types from most favorite to least favorite ArrayList<String> myArray = new ArrayList<>();myArray.add( "Dog" ) ;    myArray.add("Snake") ;  myArray.add("Shark") ;  myArray.add( "cat" ) ;  myArray.add( "Fish" ) ;  Difficult ArrayList Problem (Source: https://practiceit.cs.washington.edu/problem/view/cs2/exams/midterms/midterm24/ArrayListMystery)public static void mystery(ArrayList<Integer> list) {    for (int i = 1; i < list.size(); i += 2) {        if (list.get(i - 1) >= list.get(i)) {            list.remove(i);            list.add(0, 0);       }    }    System.out.println(list);Write the output produced by the method when passed each of the following ArrayLists:[10, 20, 10, 5]	=> [0,10,20,10][8, 2, 9, 7, -1, 55] =>[0, 16, 9, 1, 64, 25, 25, 14, 0] =>Second ArrayList Problem (Medium): ArrayList Presentation from the University of Washington: https://courses.cs.washington.edu/courses/cse142/16au/lectures/26-ch10-1-arraylist.pdfArrayList Interview Problems: https://javarevisited.blogspot.com/2015/07/java-arraylist-tutorial.htmlhttps://repl.it/languages/java10 // Online IDE                             import java.util.Scanner; // Java Imports for IO Deviceimport java.util.Arrays; // Java Imports for Printingimport java.util.ArrayList;                             public class SieveProject{	public static void main(String args[]){        Scanner sc=new Scanner(System.in);        System.out.println("Find all the prime numbers from 2 to _____");        int n=sc.nextInt();        ArrayList<Integer> myArray= new ArrayList<>();        for(int i=2;i<=n;i++){        myArray.add(i);        }        for(int j=2;j<=n;j++){        for(int k=2*j;k<=n;k+=j){        if(myArray.indexOf(k)!=-1){        myArray.remove(myArray.indexOf(k));        }        }        }        // https://beginnersbook.com/2013/12/java-arraylist-indexof-method-example/        // .remove() -> remove a number at a certain place        System.out.println(Arrays.toString(myArray.toArray())); //Print out final result        }}                             // Problem: Create a list from 1 to n of all the values 4 * n + 1 (ex. 4*1+1=5; 4*2+1 = 9; 4*3+1=13; so 5, 9, 13 are in the list in the same style as the Sieve)                             --------------------------------------- NEW Lesson ---------------------------------------                             Recursion in Java (PPT): https://s3-us-west-2.amazonaws.com/www-cse-public/k12outreach/apcs/slides/java-recursive-tracing.pdf                             Example Problem: https://codingbat.com/prob/p154669                             STATIC Code Example:                              class Languages {  public static void main(String[] args) {    y = 3    x = y * y;    System.out.println(display());  }   static String display() {    System.out.println("Java is my favorite programming language.");    return "HI";  }}  Static Methods vs. Instance Methods: https://www.programmingsimplified.com/java/source-code/java-static-method-program  Factorials (mathematical operator denoted by an !):  3! = 3 * 2 * 1 = 6 4! = 4 * 3 * 2 * 1 = 24  5! = 5 * 4 * 3 * 2 * 1 = 120  6! = 6 * 5 * 4 * 3 * 2 * 1 = 720  public int factorial(int n) {  if (n == 1) {    return n;  }  else {    return n*factorial(n-1);  }}  Fibonacci (with recursion): https://codingbat.com/prob/p120015                              